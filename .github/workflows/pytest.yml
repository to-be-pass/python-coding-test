name: Run pytest

on:
  pull_request:
    branches:
      - solutions
      - '**/[0-9][0-9][0-9]'
    types:
      - opened
      - synchronize
jobs:

  extract-num:
    runs-on: ubuntu-latest

    outputs:
      num: ${{ steps.extract.outputs.num }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Print Context
      run: | 
        echo ${{ github.ref }}
        echo ${{ github.ref_name }}
        echo ${{ github.head_ref }}
        echo ${{ github.action_status }}
        echo ${{ github.event_name }}
        echo ${{ github.event_path }}
    - name: Read solution number from Branch
      id: extract
      run: |
        echo "num=$(python ./script/get_number.py ${{ github.head_ref }})" >> $GITHUB_OUTPUT
    - name: Print solution number
      run: echo ${{ steps.extract.outputs.num }}
  
  extract-info:
    runs-on: ubuntu-latest
    needs: extract-num

    outputs:
      info: ${{ steps.extract-json.outputs.info }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Print extract solution number
        run: echo ${{needs.extract-num.outputs.num }}
      - name: Read solution-info from JSON
        id: extract-json
        run: |
          cd ./script
          echo "info=$(python read_json.py ${{ needs.extract-num.outputs.num }})" >> $GITHUB_OUTPUT
      - name: Print solution info
        run: echo "${{ steps.extract-json.outputs.info }}"
        
  hello-comment:
    runs-on: ubuntu-latest
    needs: [extract-num, extract-info]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Print solution number annd info
        run: |
          echo ${{ needs.extract-num.outputs.num }} 
          echo "${{ needs.extract-info.outputs.info }}"

      - name: Auto Comment on Pull Request
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: wow-actions/auto-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pullRequestOpened: |
            👋 @{{ author }} 님 안녕하세요!
            코딩 테스트 합격자 되기(파이썬 편) : `문제 ${{ needs.extract-num.outputs.num }}` 를 풀고 있으시네요!
            해당 문제의 책 페이지와 프로그래머스 링크를 알려드릴께요!

            ${{ needs.extract-info.outputs.info }}
            
            1. 테스트가 실패한 경우 다시 한번 문제를 풀어서 `push` 해보세요!
            2. 로컬에서 디버깅도 해보고 스스로 코멘트를 달면서 공부해보세요! 
            3. 다시 한번 문제를 풀어서 `push` 해보세요!

  test:
    runs-on: ubuntu-latest
    needs: extract-num

    strategy:
      matrix:
        python-version:
          - '3.8'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest python-dotenv

    - name: Run pytest
      run: pytest --id=${{ github.actor }} -k 'test_${{needs.extract-num.outputs.num}}'

  create-and-add-label:
    runs-on: ubuntu-latest
    needs: [test, extract-num]
    if: always()
    steps:
    - name: Create and Add Label
      uses: actions/github-script@v5
      with:
        script: |
          const labelName = '문제${{ needs.extract-num.outputs.num }}';
          const labelColor = 'ffffff'; // 라벨 색상을 HEX 코드로 설정

          // 라벨이 존재하는지 확인
          try {
            await github.rest.issues.getLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: labelName
            });
          } catch (error) {
            // 라벨이 존재하지 않으면 생성
            await github.rest.issues.createLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: labelName,
              color: labelColor,
            });
          }

          // 풀 리퀘스트에 라벨 추가
          await github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [labelName]
          });

  review-fail:
    runs-on: ubuntu-latest
    needs: [test, extract-num]
    if: failure()
    steps:
    - name: if fail test 
      uses: wow-actions/auto-comment@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        pullRequestOpened: |
           ❌ @{{author}} 님. 아쉽습니다.
           
           테스트에 실패했습니다.
           다시 한번 문제를 풀고, `push` 하고 테스트를 통과해보세요!
           
           너무 어려우시면 같은 문제를 다른 사람들은 어떻게 풀고있는지 참고도 해보세요!
           [문제 ${{needs.extract-num.outputs.num}} - 보러가기](${{github.server_url}}/${{github.repository}}/pulls?q=is%3Apr+label%3A문제${{needs.extract-num.outputs.num}}) 

        pullRequestSynchronize: |
           ❌ @{{author}} 님. 아쉽습니다.
           
           테스트에 실패했습니다.
           다시 한번 문제를 풀고, `push` 하고 테스트를 통과해보세요!

           너무 어려우시면 같은 문제를 다른 사람들은 어떻게 풀고있는지 참고도 해보세요!
           [문제 ${{needs.extract-num.outputs.num}} - 보러가기](${{github.server_url}}/${{github.repository}}/pulls?q=is%3Apr+label%3A문제${{needs.extract-num.outputs.num}}) 

  review-pass:
    runs-on: ubuntu-latest
    needs: [extract-num, test]
    if: success()
    steps:
    - name: if pass test
      uses: wow-actions/auto-comment@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        pullRequestOpened: |
            🎉 @{{ author }} 님. 축하 합니다! 
            
            문제 `${{ needs.extract-num.outputs.num }}` 테스트를 통과하셨습니다!
            soluton 브랜치에 Merge 해주세요!

            도움이 필요한 사람들이 있으면 도와주세요! 소통하면서 더 성장 할 수 있는 좋은 기회입니다!
            [문제 ${{needs.extract-num.outputs.num}} - 도움주러 가기](${{github.server_url}}/${{github.repository}}/pulls?q=is%3Apr+label%3A문제${{needs.extract-num.outputs.num}})
    
        pullRequestSynchronize: |
            🎉 @{{ author }} 님. 축하 합니다! 
            
            문제 `${{ needs.extract-num.outputs.num }}` 테스트를 통과하셨습니다!
            soluton 브랜치에 Merge 해주세요!

            도움이 필요한 사람들이 있으면 도와주세요! 소통하면서 더 성장 할 수 있는 좋은 기회입니다!
            [문제 ${{needs.extract-num.outputs.num}} - 도움주러 가기](${{github.server_url}}/${{github.repository}}/pulls?q=is%3Apr+label%3A문제${{needs.extract-num.outputs.num}})
    